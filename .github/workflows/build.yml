name: Go package

on: [push]

env:
  app_name: tinydisplay

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Install apt dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt install --no-install-recommends xorg-dev

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...

      - name: Build ./cmd/tinydisplay
        run: |
          go build -v ./cmd/tinydisplay

      - name: Archive for ubuntu-latest
        if: runner.os == 'Linux'
        run: tar cvzf ${{ env.app_name }}.tgz tinydisplay

      - name: Archive for windows-latest
        if: runner.os == 'Windows'
        run: 7z -tzip a ${{ env.app_name }}.zip tinydisplay.exe

      - name: Archive for macos-latest
        if: runner.os == 'macOS'
        run: tar cvzf ${{ env.app_name }}.tgz tinydisplay

      - name: Publish artifact for ubuntu-latest
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.app_name }}-linux-amd64-double-zipped
          path: |
            ${{ env.app_name }}.tgz

      - name: Publish artifact for windows-latest
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.app_name }}-windows-amd64-double-zipped
          path: |
            ${{ env.app_name }}.zip

      - name: Publish artifact for macos-latest
        if: runner.os == 'macOS'
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.app_name }}-macos-amd64-double-zipped
          path: |
            ${{ env.app_name }}.tgz
